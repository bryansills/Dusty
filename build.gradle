buildscript {
    ext.versions = [
        'kotlin': '1.6.0',
        'coroutines': '1.6.0',
        'android_gradle_plugin': '7.2.0-alpha06',
        'shadow_jar': '7.1.1',
        'ktor': '1.6.7',
        'kotlin_css': '1.0.0-pre.284-kotlin-1.6.10',
        'logback': '1.2.5',
        'appcompat': '1.4.0',
        'constraint_layout': '2.1.2',
        'retrofit': '2.9.0',
        'moshi': '1.13.0',
        'okhttp': '4.9.3',
        'datastore': '1.0.0',
        'wire': '4.0.1'
    ]
    ext.build_config = [
        'compile_sdk': 31,
        'min_sdk': 24,
        'target_sdk': 31
    ]
    ext.deps = [
        'kotlin': [
            'gradle_plugin': "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
            'stdlib': "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
            'coroutines': "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}",
            'css': "org.jetbrains.kotlin-wrappers:kotlin-css:${versions.kotlin_css}"
        ],
        'ktor': [
            'netty': "io.ktor:ktor-server-netty:${versions.ktor}",
            'core': "io.ktor:ktor-server-core:${versions.ktor}",
            'html': "io.ktor:ktor-html-builder:${versions.ktor}"
        ],
        'android': [
            'gradle_plugin': "com.android.tools.build:gradle:${versions.android_gradle_plugin}",
            'appcompat': "androidx.appcompat:appcompat:${versions.appcompat}",
            'constraint_layout': "androidx.constraintlayout:constraintlayout:${versions.constraint_layout}",
            'datastore': "androidx.datastore:datastore:${versions.datastore}"
        ],
        'shadow_jar': "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:${versions.shadow_jar}",
        'logback': "ch.qos.logback:logback-classic:${versions.logback}",
        'retrofit': [
            'core': "com.squareup.retrofit2:retrofit:${versions.retrofit}",
            'moshi': "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
        ],
        'moshi': [
            'kotlin': "com.squareup.moshi:moshi-kotlin:${versions.moshi}",
            'codegen': "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"
        ],
        'okhttp': [
            'logging': "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
        ],
        'wire': [
            'gradle_plugin': "com.squareup.wire:wire-gradle-plugin:${versions.wire}",
            'runtime': "com.squareup.wire:wire-runtime:${versions.wire}"
        ]
    ]
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath deps.android.gradle_plugin
        classpath deps.kotlin.gradle_plugin
        classpath deps.wire.gradle_plugin
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    plugins.withType(com.android.build.gradle.BasePlugin).configureEach { plugin ->
        plugin.extension.compileOptions {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }

    tasks.withType(JavaCompile).configureEach { task ->
        task.sourceCompatibility = JavaVersion.VERSION_1_8
        task.targetCompatibility = JavaVersion.VERSION_1_8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile).configureEach { task ->
        task.kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinCompile).configureEach { task ->
        task.kotlinOptions {
            freeCompilerArgs += [
                    '-XXLanguage:+NewInference',
                    '-progressive',
                    '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi',
                    '-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi',
                    '-Xuse-experimental=kotlin.time.ExperimentalTime',
            ]
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
